import pandas as pd
import os


class Preprocess:
    def __init__(self, txt_data_folder, csv_data_folder):
        self.txt_data_folder = txt_data_folder
        self.csv_data_folder = csv_data_folder

    def txt2csv_separate(self, file_range=range(1, 10357 + 1)):  # number of .txt files are 10357
        # Method for collecting the raw data and convert to multiple csv files (i.e: 1000 users' info per csv file)
        # You can ignore this method
        csvout_lst = []
        for file_name in file_range:
            txt_file_path = os.path.join(self.txt_data_folder, '%s.txt' % file_name)
            try: # avoid errors of blank data file
                txt_data = pd.read_csv(txt_file_path, sep="\s|,|:",header = None, engine = 'python')
                txt_data.columns = ['user_id', 'date','time(hour)','minute', 'second','longitude', 'latitude']
                del txt_data['date']
                del txt_data['minute']
                del txt_data['second']
                csvout_lst.append(txt_data)
            except ValueError:
                print('Maybe the file number %s is blank' % file_name)

            if file_name % 1000 == 0:
                print('%s files are converted to .csv' % file_name)
                csv_file_path = os.path.join(self.csv_data_folder, 'Userframe/T-drive Taxi Trajectories%s.csv' % file_name)
                pd.concat(csvout_lst).to_csv(csv_file_path, index=None)
                csvout_lst = []

            if file_name == 10357:
                print('%s files are converted to .csv' % file_name)
                csv_file_path = os.path.join(self.csv_data_folder, 'Userframe/T-drive Taxi Trajectories%s.csv' % file_name)
                pd.concat(csvout_lst).to_csv(csv_file_path, index=None)

        print('All files are successfully converted')

    def txt2csv_allin1(self, file_range=range(1, 10357 + 1)):  
        # The file has headers
        csvout_lst = []
        csv_file_path = os.path.join(self.csv_data_folder, 'Fullframe/T-drive Taxi Trajectories.csv')
        for file_name in file_range:
            txt_file_path = os.path.join(self.txt_data_folder, '%s.txt' % file_name)
            try:
                txt_data = pd.read_csv(txt_file_path, sep="\s|,|:", header=None, engine='python')
                txt_data.columns = ['user_id', 'date', 'time(hour)', 'minute', 'second', 'longitude', 'latitude']
                del txt_data['date']
                del txt_data['minute']
                del txt_data['second']
                csvout_lst.append(txt_data)
            except ValueError:
                print('Maybe the file number %s is blank' % file_name)

            if file_name % 1000 == 0:
                print('%s files are preprocessed' % file_name)
        pd.concat(csvout_lst).to_csv(csv_file_path, index=None)
        print('All files are successfully converted')

    def csv_filter(self):
        # Method for filtering the csv file (the output of txt2csv_allin1 method)
        # The output are 24 csv files according to 24 hours
        # Only the columns of longitude and latitude are preserved
        # The file has no header
        csv_file_path = os.path.join(self.csv_data_folder,'Fullframe/T-drive Taxi Trajectories.csv')
        csv_data = pd.read_csv(csv_file_path)
        for hour in range(24):
            csv_filter_data_path = os.path.join(self.csv_data_folder,'Hourframe/T-drive Taxi Trajectories%s.csv'% hour)
            filter = csv_data['time(hour)'] == hour
            csv_data_filter = csv_data[filter]
            del csv_data_filter['time(hour)']
            del csv_data_filter['user_id']
            csv_data_filter.to_csv(csv_filter_data_path,index=None,header=None)
            print('time frame of %s is converted to csv' % hour)



txt_folder = os.path.join(os.getcwd(),r'RawData\T-drive Taxi Trajectories\taxi_log_2008_by_id')
csv_folder = os.path.join(os.getcwd(),r'Data')
taxi_data = Preprocess(txt_folder, csv_folder)
taxi_data.txt2csv_allin1()
taxi_data.csv_filter()
